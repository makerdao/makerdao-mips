FROM node:16.16.0-alpine3.16 as appbuild

WORKDIR /usr/src/backend

ARG NODE_ENV
ARG MONGODB_URI
ARG FOLDER_REPOSITORY_NAME
ARG FOLDER_PATTERN
ARG WEBHOOKS_SECRET_TOKEN
ARG GIT_ACCESS_API_TOKEN
ARG GITHUB_REPOSITORY_ID
ARG GITHUB_REPOSITORY
ARG GITHUB_REPOSITORY_OWNER
ARG MIP_GITHUB_REPOSITORY
ARG MIP_GITHUB_REPOSITORY_OWNER
ARG REPO_BRANCH
ARG REPO_PATH
ARG GITHUB_LINKS
ARG GITHUB_URL_API_ENDPOINT

ENV NODE_ENV=${NODE_ENV:-"development"}
ENV MONGODB_URI=${MONGODB_URI}
ENV FOLDER_REPOSITORY_NAME=${FOLDER_REPOSITORY_NAME}
ENV FOLDER_PATTERN=${FOLDER_PATTERN}
ENV WEBHOOKS_SECRET_TOKEN=${WEBHOOKS_SECRET_TOKEN}
ENV GIT_ACCESS_API_TOKEN=${GIT_ACCESS_API_TOKEN}
ENV GITHUB_REPOSITORY_ID=${GITHUB_REPOSITORY_ID}
ENV GITHUB_REPOSITORY=${GITHUB_REPOSITORY}
ENV GITHUB_REPOSITORY_OWNER=${GITHUB_REPOSITORY_OWNER}
ENV MIP_GITHUB_REPOSITORY=${MIP_GITHUB_REPOSITORY}
ENV MIP_GITHUB_REPOSITORY_OWNER=${MIP_GITHUB_REPOSITORY_OWNER}
ENV REPO_BRANCH=${REPO_BRANCH}
ENV REPO_PATH=${REPO_PATH}
ENV GITHUB_LINKS=${GITHUB_LINKS}
ENV GITHUB_URL_API_ENDPOINT=${GITHUB_URL_API_ENDPOINT}

COPY ./package*.json ./
RUN npm install

COPY . .
RUN npm run build

FROM node:16.16.0-alpine3.16

RUN apk add --no-cache git

WORKDIR /usr/src/backend

COPY --from=appbuild /usr/src/backend/package*.json ./
RUN npm install --production
COPY --from=appbuild /usr/src/backend/dist ./dist

RUN npm run pre-start
RUN npx nestjs-command drop:db
RUN npx nestjs-command parse:mips

EXPOSE 3000

CMD yarn run start:prod
